#!/usr/bin/env python
import numpy as np
import matplotlib.pyplot as plt

def f(x0, x):
    return np.tanh( np.power( x / x0, 4 ) ) * np.power( x, -2 )

def g(x0, x):
    return np.exp( -np.power( x / x0, 2 ) ) 

x = np.arange( 0, 10, 0.01 )
yf= 0.005*f(3, x)
yg = g( 1.4, x )
yt = yf + yg



fig = plt.figure( figsize = [6, 4] )
ax = fig.add_subplot( 111 )
ax.grid( 'on' )
ax.set_xlabel( r'$\zeta$')
ax.set_ylabel( r'$P(\zeta)$')
ax.set_yscale( 'log' )
ax.set_ylim( 1e-5, 1 )

ax.plot( x, yt, 'k-', label = r'Total distribution' )
ax.plot( x, yf, 'k--', label = r'Extra scattering' )
ax.plot( x, yg, 'k-.', label = r'Gaussian distribution' )

plt.setp(ax.get_yticklabels(), visible=False)

plt.xticks( [3], ['$\zeta_0$'] )

handles, labels = ax.get_legend_handles_labels()
ax.legend( handles, labels, handlelength = 3 )

plt.tight_layout()
plt.savefig( 'output/random_dist.pdf',
        format = 'pdf', transparent = True )
